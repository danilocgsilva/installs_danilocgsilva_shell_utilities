#!/bin/bash

##
# u_ping stands for "Universal Ping". Auxiliar funcition. It must checks if the ping present in the system is the Linux ping or Microsoft ping to choose the right parameter to provides
u_ping() {

    ping_source=$(which ping)
    site_to_ping=github.com

    # Tests if exists Windows/system32 in the path. If so, is the Windows ping utility.
    shopt -s nocasematch
    if [[ $ping_source =~ 'windows/system32' ]]; then
        ping -n 2 $site_to_ping > /dev/null
    else
        ping -c 2 $site_to_ping > /dev/null
    fi
}

##
# The main funcion
# Check the planning folder
installsdanilocgsilvautility() {
    # Declare the error array
    declare -a installsdanilocgsilvautility_errors

    # 1. Check if the first parameter, which must be the utility name, was provided.
    if [ ${#1} -eq 0 ]; then
        installsdanilocgsilvautility_errors+=("You need to provides the first argument to be the utility name.")
    fi

    # 2. Check if the file .installs_danilocgsilva_shell_utilites_conf exists within the user folder
    if ! [ -f ~/.installs_danilocgsilva_shell_utilites_conf ]; then
        installsdanilocgsilvautility_errors+=("There is no file .installs_danilocgsilva_shell_utilites_conf in the user folder. It must exists and have the address of the php utility that will fetches information from the github.")
    fi

    # 3. Check the internet connection
    echo Testing connection:
    u_ping
    if [ $? -ne 0 ]; then
        installsdanilocgsilvautility_errors+=("Error in the connection.")
    fi

    # 4. Checks if the curl utility exists within the system
    if ! [ $(which curl 2> /dev/null) ] ; then
        installsdanilocgsilvautility_errors+=("The curl utility is not installed in the system.")
    fi

    # 5. Checks if it can save in the /usr/local/bin
    if ! [ -w /usr/local/bin ]; then
        installsdanilocgsilvautility_errors+=("The current user can not write in the /usr/local/bin")
    fi

    #. Verify if the address within .installs_danilocgsilva_shell_utilites_conf is reachable

    # Error output
    error_counting=${#installsdanilocgsilvautility_errors[@]}
    if [ $error_counting -gt 0 ]; then
        for i in $(seq 0 $(expr $error_counting - 1)); do
            echo installs_danilocgsilva_shell_utilities error: ${installsdanilocgsilvautility_errors[$i]}
        done
        return
    fi

}

## The main funcion execution
installsdanilocgsilvautility $1
